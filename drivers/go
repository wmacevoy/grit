#!/bin/bash

export MOJAVATON_DIR=$(realpath $(dirname $0)/..)
# timestamp=$(date +Y%Y-M%m-D%d-h%H-m%M-s%S)

running()
{
  app=$1
  if [ -f $MOJAVATON_DIR/pids/$app.pid ]
  then
    pid=$(cat $MOJAVATON_DIR/pids/$app.pid)
    if ps -eo pid | egrep -q '\<'$pid'\>'
    then
      return 0
    fi
  fi
  return 1
}

stop_app()
{
  app=$1

  term_tries=4
  kill_tries=2

  for try in $(seq 1 $((term_tries+$kill_tries)))
  do
      if ! running $app
      then
	  /bin/rm -rf $MOJAVATON_DIR/pids/$app.pid
	  return 0
      fi

      if [ $try -le $term_tries ]
      then
	  kill $(cat $MOJAVATON_DIR/pids/$app.pid)
      else
	  kill -9 $(cat $MOJAVATON_DIR/pids/$app.pid)
      fi
      sleep 1
  done
  return 1
}

stop_apps()
{
    for app in "$@"
    do
	stop_app $app
    done
}


start_app()
{
  app=$1
  if running $app
  then
      return 0
  fi
  
  mkdir -p $MOJAVATON_DIR/pids
  mkdir -p $MOJAVATON_DIR/logs
  cd $MOJAVATON_DIR/drivers/$app
  $MOJAVATON_DIR/drivers/$app/bin/$app >$MOJAVATON_DIR/logs/$app.log 2>&1 &
  cpid=$!
  echo "app $app pid=$cpid"
  echo $cpid > $MOJAVATON_DIR/pids/$app.pid
}

start_apps()
{
    for app in "$@"
    do
	if ! start_app $app
	then
	    return 1
	fi
    done
    return 0
}

setup()
{
  # add bin folders to PATH
  for bin in $MOJAVATON_DIR/drivers/*/bin
  do
    PATH="$bin:$PATH"
  done

  # add 3rd party and project library paths
  for lib in $MOJAVATON_DIR/libs/lib $MOJAVATON_DIR/drivers/*/lib
  do
    export LD_LIBRARY_PATH="$lib:$LD_LIBRARY_PATH"
  done
}

start()
{
    start_apps body servos
}

stop()
{
    stop_apps servos body
}

commander()
{
    start && exec $MOJAVATON_DIR/drivers/commander/bin/commander
}

setup

while [ $# -gt 0 ]
do
  $1
  shift
done
