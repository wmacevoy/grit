#
# generated configuration file.
#
[flags]
prefix="ik_leg" # prefix prepended to function and argument names
precision="single" # can be "double" or "single"
namespace="" # used by c++ generator 
main="false" # if true, then a main() is defined by the c++ generator
solver="damped_newton"
coptgen="true"
[globals] # values shared among all cells
epsilon
steps
[parameters] # values specific to each cell
knee
femur
hip
chasis
dfemur2knee
dhip2femur
drchasis2hip
dyknee2tip
dzchasis2hip
dzknee2tip
px
py
pz
residual
[variables]
_knee
_femur
_hip
[initializers] # initial guess for solution of variables in terms of parameters/globals
_knee=knee
_femur=femur
_hip=hip
[equations] # system of equations variables should be a root of
residual0=cos(0.0174532925199433*_femur)*(((-1.0))*cos(0.0174532925199433*chasis)*sin(0.0174532925199433*_hip)+((-1.0))*cos(0.0174532925199433*_hip)*sin(0.0174532925199433*chasis))*dfemur2knee+(cos(0.0174532925199433*_femur)*cos(0.0174532925199433*_knee)*(((-1.0))*cos(0.0174532925199433*chasis)*sin(0.0174532925199433*_hip)+((-1.0))*cos(0.0174532925199433*_hip)*sin(0.0174532925199433*chasis))+((-1.0))*sin(0.0174532925199433*_femur)*sin(0.0174532925199433*_knee)*(((-1.0))*cos(0.0174532925199433*chasis)*sin(0.0174532925199433*_hip)+((-1.0))*cos(0.0174532925199433*_hip)*sin(0.0174532925199433*chasis)))*dyknee2tip+(((-1.0))*cos(0.0174532925199433*chasis)*sin(0.0174532925199433*_hip)+((-1.0))*cos(0.0174532925199433*_hip)*sin(0.0174532925199433*chasis))*dhip2femur+(((-1.0))*cos(0.0174532925199433*_femur)*sin(0.0174532925199433*_knee)*(((-1.0))*cos(0.0174532925199433*chasis)*sin(0.0174532925199433*_hip)+((-1.0))*cos(0.0174532925199433*_hip)*sin(0.0174532925199433*chasis))+((-1.0))*cos(0.0174532925199433*_knee)*sin(0.0174532925199433*_femur)*(((-1.0))*cos(0.0174532925199433*chasis)*sin(0.0174532925199433*_hip)+((-1.0))*cos(0.0174532925199433*_hip)*sin(0.0174532925199433*chasis)))*dzknee2tip+((-1.0))*sin(0.0174532925199433*chasis)*drchasis2hip+((-1.0))*px
residual1=cos(0.0174532925199433*chasis)*drchasis2hip+cos(0.0174532925199433*_femur)*(cos(0.0174532925199433*chasis)*cos(0.0174532925199433*_hip)+((-1.0))*sin(0.0174532925199433*chasis)*sin(0.0174532925199433*_hip))*dfemur2knee+(cos(0.0174532925199433*chasis)*cos(0.0174532925199433*_hip)+((-1.0))*sin(0.0174532925199433*chasis)*sin(0.0174532925199433*_hip))*dhip2femur+(cos(0.0174532925199433*_femur)*cos(0.0174532925199433*_knee)*(cos(0.0174532925199433*chasis)*cos(0.0174532925199433*_hip)+((-1.0))*sin(0.0174532925199433*chasis)*sin(0.0174532925199433*_hip))+((-1.0))*sin(0.0174532925199433*_femur)*sin(0.0174532925199433*_knee)*(cos(0.0174532925199433*chasis)*cos(0.0174532925199433*_hip)+((-1.0))*sin(0.0174532925199433*chasis)*sin(0.0174532925199433*_hip)))*dyknee2tip+(((-1.0))*cos(0.0174532925199433*_femur)*sin(0.0174532925199433*_knee)*(cos(0.0174532925199433*chasis)*cos(0.0174532925199433*_hip)+((-1.0))*sin(0.0174532925199433*chasis)*sin(0.0174532925199433*_hip))+((-1.0))*cos(0.0174532925199433*_knee)*sin(0.0174532925199433*_femur)*(cos(0.0174532925199433*chasis)*cos(0.0174532925199433*_hip)+((-1.0))*sin(0.0174532925199433*chasis)*sin(0.0174532925199433*_hip)))*dzknee2tip+((-1.0))*py
residual2=sin(0.0174532925199433*_femur)*dfemur2knee+(cos(0.0174532925199433*_femur)*cos(0.0174532925199433*_knee)+((-1.0))*sin(0.0174532925199433*_femur)*sin(0.0174532925199433*_knee))*dzknee2tip+(cos(0.0174532925199433*_femur)*sin(0.0174532925199433*_knee)+cos(0.0174532925199433*_knee)*sin(0.0174532925199433*_femur))*dyknee2tip+((-1.0))*pz+dzchasis2hip
[updates] # how parameters are updated in terms of temp variables
knee=_knee
femur=_femur
hip=_hip
[tests]
#
[runs]
#
[end]
