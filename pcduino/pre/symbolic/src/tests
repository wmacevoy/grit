#!/bin/bash

let err=0

let tests=$tests+1 && ./bin/test_expression 0 expect 0 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression 1 expect 1 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression -3.1 expect -3.1 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression 'cos(0)' expect 1 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression 'cos(%pi/2)' expect 0 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression 'sin(0)' expect 0 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression 'sin(%pi/2)' expect 1 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression 'A*cos(2*%pi*t/T)' diff t A=2 T=4 t=1 expect 0 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression 'A*cos(2*%pi*t/T)' diff t A=2 T=4 t=4 expect -3.14159265358979 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression 1/2 expect 0.5 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression 1e10 expect 1e10 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression 1e-10 expect 1e-10 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression -1e-10 expect -1e-10 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression x*y+x^2 diff x x=2 y=3 expect 7 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression x^y+x^2 diff x x=2 y=3 expect 16 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression x/y+y/x diff x x=2 y=3 expect -0.416666666666667 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression x/y+y/x diff x x=1.2 y=7.5 expect -5.075 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression '1/(x^2-2)' diff x x=-3 expect 0.122448979591837 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression '1+x+3+5+7+2*x' diff x expect 3 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression '+x+-y' x=0 y=1 expect -1 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression '+x+-y' x=1 y=0 expect 1 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression 'log(%e)' expect 1 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression 'exp(1)' expect 2.71828182845905 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression 'log(2*x^3*y+3*y^2)-log(x*y+y^3+7)' diff x x=2.2 y=.33 expect 1.26054505633476 || let err=$err+1
let tests=$tests+1 && ./bin/test_expression 'log(2*exp(u)^3*exp(v)+3*exp(v)^2)-log(exp(u)*exp(v)+exp(v)^3+7)' diff v u='0.75' v='-2.0' expect 0.980621382224281 || let err=$err+1
# used to seg fault
let tests=$tests+1 && ./bin/test_expression "(log((((%e)^({log(UO2++)}))+((%e)^({log(UO2(SO4)2--)}))+((%e)^({log(UO2(OH)4--)}))+((%e)^({log(UO2(OH)3-)}))+((%e)^({log(UO2(OH)2)}))+((%e)^({log(UO2(CO3)3----)}))+((%e)^({log(UO2(CO3)2--)}))+((%e)^({log(SOUO2OH)}))+((%e)^({log(SOUO2(HCO3)2-)}))+((%e)^({log(CaUO2(CO3)3--)}))+((%e)^({log(Ca2UO2(CO3)3)}))+((%e)^({log(UO2Cl+)}))+((%e)^({log(UO2NO3+)}))+((%e)^({log(UO2SO4)}))+((%e)^({log(UO2OH+)}))+((%e)^({log(UO2CO3)}))+((%e)^({log(UO2Cl2)}))+(2*((%e)^({log((UO2)2CO3(OH)3-)})))+(2*((%e)^({log((UO2)2(OH)2++)})))+(2*((%e)^({log((UO2)2OH+++)})))+(3*((%e)^({log((UO2)3(OH)4++)})))+(3*((%e)^({log((UO2)3(OH)5+)})))+(3*((%e)^({log((UO2)3(OH)7-)})))+(4*((%e)^({log((UO2)4(OH)7+)})))))+(-1*log(((2*{(UO2)2(OH)2++_0})+(2*{(UO2)2CO3(OH)3-_0})+(2*{(UO2)2OH+++_0})+(3*{(UO2)3(OH)4++_0})+(3*{(UO2)3(OH)5+_0})+(3*{(UO2)3(OH)7-_0})+(4*{(UO2)4(OH)7+_0})+{Ca2UO2(CO3)3_0}+{CaUO2(CO3)3--_0}+{SOUO2(HCO3)2-_0}+{SOUO2OH_0}+{UO2(CO3)2--_0}+{UO2(CO3)3----_0}+{UO2(OH)2_0}+{UO2(OH)3-_0}+{UO2(OH)4--_0}+{UO2(SO4)2--_0}+{UO2++_0}+{UO2CO3_0}+{UO2Cl+_0}+{UO2Cl2_0}+{UO2NO3+_0}+{UO2OH+_0}+{UO2SO4_0}))))" print > /dev/null || let err=$err+1
# used to seg fault
let tests=$tests+1 && ./bin/test_expression "((%e)^({ln(SOUO2OH)}))+((%e)^({ln(SOUO2(HCO3)2-)}))+((%e)^({ln(CaUO2(CO3)3--)}))+((%e)^({ln(Ca2UO2(CO3)3)}))+((%e)^({ln(UO2Cl+)}))+((%e)^({ln(UO2NO3+)}))+((%e)^({ln(UO2SO4)}))+((%e)^({ln(UO2OH+)}))+((%e)^({ln(UO2CO3)}))+((%e)^({ln(UO2Cl2)}))+(2*((%e)^({ln((UO2)2CO3(OH)3-)})))+(2*((%e)^({ln((UO2)2(OH)2++)})))+(2*((%e)^({ln((UO2)2OH+++)})))+(3*((%e)^({ln((UO2)3(OH)4++)})))+(3*((%e)^({ln((UO2)3(OH)5+)})))+(3*((%e)^({ln((UO2)3(OH)7-)})))+(4*((%e)^({ln((UO2)4(OH)7+)})))" print > /dev/null || let err=$err+1
let ok=$tests-$err
echo "tests: $tests ($ok ok, $err errors)"
