#
# sample configuration file.
#
[flags]
prefix="ik_tip" # prefix prepended to function and argument names
file="ik_tip"    # path to output file (suffixes added by generators)
precision="single" # can be "double" or "single"
namespace="" # used by c++ generator 
main="false" # if true, then a main() is defined by the c++ generator
solver="damped_newton"
[globals] # values shared among all cells
epsilon
steps
[parameters] # values specific to each cell
aknee
afemur
ahip
achasis
dfemur2knee
dhip2femur
drchasis2hip
dyknee2tip
dzchasis2hip
dzknee2tip
px
py
pz
residual
[variables]
aknee_
afemur_
ahip_
[initializers] # initial guess for solution of variables in terms of parameters/globals
aknee_=aknee
afemur_=afemur
ahip_=ahip
[equations] # system of equations variables should be a root of
residual0=cos(afemur_)*(((-1.0))*cos(achasis)*sin(ahip_)+((-1.0))*cos(ahip_)*sin(achasis))*dfemur2knee+(cos(afemur_)*cos(aknee_)*(((-1.0))*cos(achasis)*sin(ahip_)+((-1.0))*cos(ahip_)*sin(achasis))+((-1.0))*sin(afemur_)*sin(aknee_)*(((-1.0))*cos(achasis)*sin(ahip_)+((-1.0))*cos(ahip_)*sin(achasis)))*dyknee2tip+(((-1.0))*cos(achasis)*sin(ahip_)+((-1.0))*cos(ahip_)*sin(achasis))*dhip2femur+(((-1.0))*cos(afemur_)*sin(aknee_)*(((-1.0))*cos(achasis)*sin(ahip_)+((-1.0))*cos(ahip_)*sin(achasis))+((-1.0))*cos(aknee_)*sin(afemur_)*(((-1.0))*cos(achasis)*sin(ahip_)+((-1.0))*cos(ahip_)*sin(achasis)))*dzknee2tip+((-1.0))*sin(achasis)*drchasis2hip+((-1.0))*px
residual1=cos(achasis)*drchasis2hip+cos(afemur_)*(cos(achasis)*cos(ahip_)+((-1.0))*sin(achasis)*sin(ahip_))*dfemur2knee+(cos(achasis)*cos(ahip_)+((-1.0))*sin(achasis)*sin(ahip_))*dhip2femur+(cos(afemur_)*cos(aknee_)*(cos(achasis)*cos(ahip_)+((-1.0))*sin(achasis)*sin(ahip_))+((-1.0))*sin(afemur_)*sin(aknee_)*(cos(achasis)*cos(ahip_)+((-1.0))*sin(achasis)*sin(ahip_)))*dyknee2tip+(((-1.0))*cos(afemur_)*sin(aknee_)*(cos(achasis)*cos(ahip_)+((-1.0))*sin(achasis)*sin(ahip_))+((-1.0))*cos(aknee_)*sin(afemur_)*(cos(achasis)*cos(ahip_)+((-1.0))*sin(achasis)*sin(ahip_)))*dzknee2tip+((-1.0))*py
residual2=sin(afemur_)*dfemur2knee+(cos(afemur_)*cos(aknee_)+((-1.0))*sin(afemur_)*sin(aknee_))*dzknee2tip+(cos(afemur_)*sin(aknee_)+cos(aknee_)*sin(afemur_))*dyknee2tip+((-1.0))*pz+dzchasis2hip
[updates] # how parameters are updated in terms of temp variables
aknee=aknee_
afemur=afemur_
ahip=ahip_
[runs]
[case]
name="non integer power"
aknee=0
afemur=0
ahip=0
achasis=%pi/4
dfemur2knee=12.0
dhip2femur=2.0
drchasis2hip=12.0
dyknee2tip=14.0
dzchasis2hip=4.0
dzknee2tip=1.0
px=8.0
py=8.0
pz=8.0
residual=1
epsilon=1e-4
steps=10
[end]
